language: cpp
sudo: false
notifications:
  email: false

# Use Linux unless specified otherwise
os: linux
dist: xenial

matrix:
  include:

    ##########################################################################
    # Clang on OSX
    ##########################################################################

    - env: COMPILER=clang++ BUILD_TYPE=Debug CODE_COVERAGE=FALSE
      os: osx
      compiler: clang

    - env: COMPILER=clang++ BUILD_TYPE=Release CODE_COVERAGE=FALSE
      os: osx
      compiler: clang

    ##########################################################################
    # Clang on Linux
    ##########################################################################

    # Clang 7.0
    - env: COMPILER=clang++-7 BUILD_TYPE=Debug CODE_COVERAGE=FALSE
      addons: &clang70
        apt:
          packages:
            - clang-7
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7

    - env: COMPILER=clang++-7 BUILD_TYPE=Release CODE_COVERAGE=FALSE
      addons: *clang70

    ##########################################################################
    # GCC on Linux
    ##########################################################################

    - env: COMPILER=g++-7 BUILD_TYPE=Debug CODE_COVERAGE=TRUE
      addons: &gcc7
        apt:
          packages:
            - lcov
            - g++-7
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=g++-7 BUILD_TYPE=Release CODE_COVERAGE=FALSE
      addons: *gcc7

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev -DCODE_COVERAGE=${CODE_COVERAGE}
  - cd Build

script:
  - make -j 2
  - ctest -V -j 2

after_success:
# Create lcov report
- lcov --capture --directory . --output-file coverage.info
- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
- lcov --list coverage.info # debug info
# Uploading report to CodeCov
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
